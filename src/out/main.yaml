print:
  name: print
  return_type: void
  args:
  - type: str
    name: a
  body: []
log:
  name: log
  return_type: void
  args:
  - type: str
    name: a
  body: []
add:
  name: add
  return_type: int
  args:
  - type: int
    name: a
  - type: int
    name: b
  body: []
sub:
  name: sub
  return_type: int
  args:
  - type: int
    name: a
  - type: int
    name: b
  body: []
mult:
  name: mult
  return_type: int
  args:
  - type: int
    name: a
  - type: int
    name: b
  body: []
div:
  name: div
  return_type: int
  args:
  - type: int
    name: a
  - type: int
    name: b
  body: []
concat:
  name: concat
  return_type: str
  args:
  - type: str
    name: a
  - type: str
    name: b
  body: []
lt:
  name: lt
  return_type: bool
  args:
  - type: int
    name: a
  - type: int
    name: b
  body: []
to_str:
  name: to_str
  return_type: str
  args:
  - type: int
    name: a
  body: []
gt:
  name: gt
  return_type: bool
  args:
  - type: int
    name: a
  - type: int
    name: b
  body: []
eq:
  name: eq
  return_type: bool
  args:
  - type: int
    name: a
  - type: int
    name: b
  body: []
and:
  name: and
  return_type: bool
  args:
  - type: bool
    name: a
  - type: bool
    name: b
  body: []
not:
  name: not
  return_type: bool
  args:
  - type: bool
    name: a
  body: []
or:
  name: or
  return_type: bool
  args:
  - type: bool
    name: a
  - type: bool
    name: b
  body: []
nothing:
  name: nothing
  return_type: int
  args: []
  body: []
return_5:
  name: return_5
  return_type: int
  args: []
  body:
  - TAG: RETURN
    expr:
      TAG: EXPRESSION
      value:
        TAG: VALUE
        expr: '5'
        type: int
      type: int
do_nothing:
  name: do_nothing
  return_type: int
  args: []
  body:
  - TAG: RETURN
    expr:
      TAG: EXPRESSION
      value:
        TAG: VALUE
        expr: '''str'''
        type: str
      type: str
return_self:
  name: return_self
  return_type: int
  args:
  - type: int
    name: a
    TAG: VARIABLE
  body:
  - TAG: RETURN
    expr:
      TAG: EXPRESSION
      value:
        type: int
        name: a
        TAG: VARIABLE
      type: int
plus_one:
  name: plus_one
  return_type: int
  args:
  - type: int
    name: a
    TAG: VARIABLE
  body:
  - TAG: RETURN
    expr:
      TAG: EXPRESSION
      value:
        TAG: FUNCTION_CALL
        function_name: add
        args:
        - TAG: EXPRESSION
          value:
            type: int
            name: a
            TAG: VARIABLE
          type: int
        - TAG: EXPRESSION
          value:
            TAG: VALUE
            expr: '1'
            type: int
          type: int
      type: int
main:
  name: main
  return_type: void
  args: []
  body:
  - TAG: DECLARATION
    expr:
      TAG: EXPRESSION
      value:
        TAG: VALUE
        expr: '''something'''
        type: str
      type: str
    type: str
    name: str1
  - TAG: EXPRESSION
    value:
      TAG: FUNCTION_CALL
      function_name: log
      args:
      - TAG: EXPRESSION
        value:
          name: str1
          type: str
          TAG: VARIABLE
        type: str
    type: void
  - TAG: DECLARATION
    expr:
      TAG: EXPRESSION
      value:
        TAG: FUNCTION_CALL
        function_name: return_self
        args:
        - TAG: EXPRESSION
          value:
            TAG: VALUE
            expr: '19'
            type: int
          type: int
      type: int
    type: int
    name: a
  - TAG: EXPRESSION
    value:
      TAG: FUNCTION_CALL
      function_name: log
      args:
      - TAG: EXPRESSION
        value:
          TAG: FUNCTION_CALL
          function_name: to_str
          args:
          - TAG: EXPRESSION
            value:
              TAG: FUNCTION_CALL
              function_name: div
              args:
              - TAG: EXPRESSION
                value:
                  TAG: VALUE
                  expr: '15'
                  type: int
                type: int
              - TAG: EXPRESSION
                value:
                  TAG: VALUE
                  expr: '10'
                  type: int
                type: int
            type: int
        type: str
    type: void
  - TAG: EXPRESSION
    value:
      TAG: FUNCTION_CALL
      function_name: log
      args:
      - TAG: EXPRESSION
        value:
          TAG: FUNCTION_CALL
          function_name: to_str
          args:
          - TAG: EXPRESSION
            value:
              TAG: FUNCTION_CALL
              function_name: sub
              args:
              - TAG: EXPRESSION
                value:
                  TAG: VALUE
                  expr: '19'
                  type: int
                type: int
              - TAG: EXPRESSION
                value:
                  TAG: FUNCTION_CALL
                  function_name: mult
                  args:
                  - TAG: EXPRESSION
                    value:
                      TAG: VALUE
                      expr: '2'
                      type: int
                    type: int
                  - TAG: EXPRESSION
                    value:
                      TAG: FUNCTION_CALL
                      function_name: div
                      args:
                      - TAG: EXPRESSION
                        value:
                          TAG: VALUE
                          expr: '15'
                          type: int
                        type: int
                      - TAG: EXPRESSION
                        value:
                          TAG: VALUE
                          expr: '10'
                          type: int
                        type: int
                    type: int
                type: int
            type: int
        type: str
    type: void
  - TAG: DECLARATION
    expr:
      TAG: EXPRESSION
      value:
        TAG: FUNCTION_CALL
        function_name: do_nothing
        args: []
      type: int
    type: int
    name: i1
  - TAG: DECLARATION
    expr:
      TAG: EXPRESSION
      value:
        TAG: VALUE
        expr: 'true'
        type: bool
      type: bool
    type: bool
    name: b
  - TAG: DECLARATION
    expr:
      TAG: EXPRESSION
      value:
        TAG: VALUE
        expr: 'false'
        type: bool
      type: bool
    type: bool
    name: b2
  - TAG: IF
    expr:
      TAG: EXPRESSION
      value:
        TAG: FUNCTION_CALL
        function_name: or
        args:
        - TAG: EXPRESSION
          value:
            TAG: VALUE
            expr: 'false'
            type: bool
          type: bool
        - TAG: EXPRESSION
          value:
            TAG: VALUE
            expr: 'true'
            type: bool
          type: bool
      type: bool
    if_true:
    - TAG: DECLARATION
      expr:
        TAG: EXPRESSION
        value:
          TAG: VALUE
          expr: '35'
          type: int
        type: int
      type: int
      name: i2
    - TAG: EXPRESSION
      value:
        TAG: FUNCTION_CALL
        function_name: log
        args:
        - TAG: EXPRESSION
          value:
            TAG: VALUE
            expr: '''hello world'''
            type: str
          type: str
      type: void
  - TAG: DECLARATION
    expr:
      TAG: EXPRESSION
      value:
        TAG: VALUE
        expr: '3'
        type: int
      type: int
    type: int
    name: three
  - TAG: DECLARATION
    expr:
      TAG: EXPRESSION
      value:
        TAG: FUNCTION_CALL
        function_name: add
        args:
        - TAG: EXPRESSION
          value:
            name: three
            type: int
            TAG: VARIABLE
          type: int
        - TAG: EXPRESSION
          value:
            TAG: VALUE
            expr: '5'
            type: int
          type: int
      type: int
    type: int
    name: eight
  - TAG: DECLARATION
    expr:
      TAG: EXPRESSION
      value:
        TAG: FUNCTION_CALL
        function_name: return_5
        args: []
      type: int
    type: int
    name: five
  - TAG: DECLARATION
    expr:
      TAG: EXPRESSION
      value:
        TAG: FUNCTION_CALL
        function_name: plus_one
        args:
        - TAG: EXPRESSION
          value:
            name: five
            type: int
            TAG: VARIABLE
          type: int
      type: int
    type: int
    name: six
